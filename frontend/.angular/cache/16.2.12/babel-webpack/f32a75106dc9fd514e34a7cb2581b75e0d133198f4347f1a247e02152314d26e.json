{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InputServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/multiply';\n  }\n  getAllData() {\n    return this.http.get(`${this.baseUrl}/allData`);\n  }\n  addInputBy2(input) {\n    return this.http.post(`${this.baseUrl}/by2`, input);\n  }\n  addInputSquar(input) {\n    return this.http.post(`${this.baseUrl}/square`, input);\n  }\n  multiplyBy2(value) {\n    return this.http.post(this.apiUrl + '/by2', value);\n  }\n  multipliedSquare(value) {\n    return this.http.post(this.apiUrl + '/square', value);\n  }\n  static #_ = this.ɵfac = function InputServiceService_Factory(t) {\n    return new (t || InputServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InputServiceService,\n    factory: InputServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["InputServiceService","constructor","http","apiUrl","getAllData","get","baseUrl","addInputBy2","input","post","addInputSquar","multiplyBy2","value","multipliedSquare","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/minyahil/projectView/src/app/input-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InputValue } from 'src/InputValue';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputServiceService {\n\n  private apiUrl = 'http://localhost:8080/api/multiply'\n\n  constructor(private http: HttpClient) { }\n  getAllData(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/allData`)\n }\n\n public addInputBy2(input: object): Observable<object> {\n  return this.http.post(`${this.baseUrl}/by2`, input);\n}\n\npublic addInputSquar(input: object): Observable<object> {\n  return this.http.post(`${this.baseUrl}/square`, input);\n}\n\n  multiplyBy2(value: InputValue): Observable<InputValue> {\n    return this.http.post<InputValue>(this.apiUrl+'/by2', value);\n  }\n\n  multipliedSquare(value: InputValue): Observable<InputValue> {\n    return this.http.post<InputValue>(this.apiUrl+'/square', value);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EACxCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,UAAU,CAAC;EAClD;EAEOC,WAAWA,CAACC,KAAa;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,MAAM,EAAEE,KAAK,CAAC;EACrD;EAEOE,aAAaA,CAACF,KAAa;IAChC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,SAAS,EAAEE,KAAK,CAAC;EACxD;EAEEG,WAAWA,CAACC,KAAiB;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACO,IAAI,CAAa,IAAI,CAACN,MAAM,GAAC,MAAM,EAAES,KAAK,CAAC;EAC9D;EAEAC,gBAAgBA,CAACD,KAAiB;IAChC,OAAO,IAAI,CAACV,IAAI,CAACO,IAAI,CAAa,IAAI,CAACN,MAAM,GAAC,SAAS,EAAES,KAAK,CAAC;EACjE;EAAC,QAAAE,CAAA,G;qBAvBUd,mBAAmB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBnB,mBAAmB;IAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}