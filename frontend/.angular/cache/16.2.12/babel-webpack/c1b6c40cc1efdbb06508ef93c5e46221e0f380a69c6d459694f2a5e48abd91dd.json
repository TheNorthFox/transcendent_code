{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { interval } from 'rxjs';\nexport let AppComponent = class AppComponent {\n  constructor(valueService) {\n    this.valueService = valueService;\n    this.title = 'projectView';\n    this.inputValue = [];\n  }\n  // reload page in 100 ms\n  ngOnInit() {\n    this.refreshPage = interval(100).subscribe(val => {\n      this.addValues();\n    });\n  }\n  addValues() {\n    this.valueService.getAllData().subscribe(data => {\n      this.inputValue = data;\n    });\n  }\n  onSubmit(formData) {\n    this.valueService.postData(formData).subscribe(response => {\n      this.data = response;\n      this.errorMsg = '';\n    }, error => {\n      this.errorMsg = 'Error: ' + error.message;\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","interval","AppComponent","constructor","valueService","title","inputValue","ngOnInit","refreshPage","subscribe","val","addValues","getAllData","data","onSubmit","formData","postData","response","errorMsg","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/minyahil/projectView/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { InputValue } from 'src/InputValue';\nimport { ValueService } from './services/value.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription, interval } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'projectView';\n  inputValue: InputValue[] = [];\n  private refreshPage: Subscription;\n  data: any;\n  errorMsg: string;\n  formData: any;\n\n  constructor(private valueService: ValueService) {}\n\n  // reload page in 100 ms\n  ngOnInit() {\n   this.refreshPage = interval(100).subscribe(\n    (val) => { this.addValues()}\n   );\n  }\n\n  private addValues(){\n    this.valueService.getAllData().subscribe((data) => {\n      this.inputValue = data;\n    });\n  }\n\n  onSubmit(formData: any) {\n    this.valueService.postData(formData).subscribe(\n      (response) => {\n        this.data = response;\n        this.errorMsg = '';\n      },\n      (error) => {\n        this.errorMsg = 'Error: ' + error.message;\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAAuBC,QAAQ,QAAQ,MAAM;AAOtC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAQvBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAPhC,KAAAC,KAAK,GAAG,aAAa;IACrB,KAAAC,UAAU,GAAiB,EAAE;EAMoB;EAEjD;EACAC,QAAQA,CAAA;IACP,IAAI,CAACC,WAAW,GAAGP,QAAQ,CAAC,GAAG,CAAC,CAACQ,SAAS,CACxCC,GAAG,IAAI;MAAG,IAAI,CAACC,SAAS,EAAE;IAAA,CAAC,CAC5B;EACF;EAEQA,SAASA,CAAA;IACf,IAAI,CAACP,YAAY,CAACQ,UAAU,EAAE,CAACH,SAAS,CAAEI,IAAI,IAAI;MAChD,IAAI,CAACP,UAAU,GAAGO,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,QAAa;IACpB,IAAI,CAACX,YAAY,CAACY,QAAQ,CAACD,QAAQ,CAAC,CAACN,SAAS,CAC3CQ,QAAQ,IAAI;MACX,IAAI,CAACJ,IAAI,GAAGI,QAAQ;MACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;IACpB,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAACD,QAAQ,GAAG,SAAS,GAAGC,KAAK,CAACC,OAAO;IAC3C,CAAC,CACF;EACH;CACD;AAlCYlB,YAAY,GAAAmB,UAAA,EALxBrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWtB,YAAY,CAkCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}