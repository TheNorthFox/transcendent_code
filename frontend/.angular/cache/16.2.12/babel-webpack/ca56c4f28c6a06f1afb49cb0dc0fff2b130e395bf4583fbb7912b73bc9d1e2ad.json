{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/value.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./add-inputs/add-inputs.component\";\nfunction AppComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const input_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(input_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(input_r1.input);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(input_r1.multiplyBy2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(input_r1.square);\n  }\n}\nexport class AppComponent {\n  constructor(valueService) {\n    this.valueService = valueService;\n    this.title = 'projectView';\n    this.inputValue = [];\n  }\n  ngOnInit() {\n    this.valueService.getAllData().subscribe(data => {\n      this.inputValue = data;\n    });\n  }\n  onSubmit(formData) {\n    this.valueService.postData(formData).subscribe(response => {\n      this.data = response;\n      this.errorMsg = '';\n    }, error => {\n      this.errorMsg = 'Error: ' + error.message;\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ValueService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"container\", 2, \"padding-top\", \"40px\"], [1, \"row\"], [1, \"col-9\", \"text-center\"], [1, \"table\", \"table-striped\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Data fetched from the Database\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\", 3)(6, \"thead\")(7, \"tr\")(8, \"th\", 4);\n        i0.ɵɵtext(9, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\", 4);\n        i0.ɵɵtext(11, \"Input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 4);\n        i0.ɵɵtext(13, \"Multiplied by 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\", 4);\n        i0.ɵɵtext(15, \"Squared Value\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, AppComponent_tr_17_Template, 9, 4, \"tr\", 5);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(18, \"app-add-inputs\")(19, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.inputValue);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i4.AddInputsComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","input_r1","id","input","multiplyBy2","square","AppComponent","constructor","valueService","title","inputValue","ngOnInit","getAllData","subscribe","data","onSubmit","formData","postData","response","errorMsg","error","message","_","ɵɵdirectiveInject","i1","ValueService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_tr_17_Template","ɵɵelement","ɵɵproperty"],"sources":["/Users/minyahil/projectView/src/app/app.component.ts","/Users/minyahil/projectView/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { InputValue } from 'src/InputValue';\nimport { ValueService } from './services/value.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'projectView';\n  inputValue: InputValue[] = [];\n\n  data: any;\n  errorMsg: string;\n  formData: any;\n\n  constructor(private valueService: ValueService) {}\n\n  ngOnInit() {\n    this.valueService.getAllData().subscribe((data) => {\n      this.inputValue = data;\n    });\n  }\n\n  onSubmit(formData: any) {\n    this.valueService.postData(formData).subscribe(\n      (response) => {\n        this.data = response;\n        this.errorMsg = '';\n      },\n      (error) => {\n        this.errorMsg = 'Error: ' + error.message;\n      }\n    );\n  }\n}\n","<div class=\"container\" style=\"padding-top: 40px\">\n  <div class=\"row\">\n    <div class=\"col-9 text-center\">\n      <h2>Data fetched from the Database</h2>\n      <table class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Input</th>\n            <th scope=\"col\">Multiplied by 2</th>\n            <th scope=\"col\">Squared Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let input of inputValue\">\n            <td>{{ input.id }}</td>\n            <td>{{ input.input }}</td>\n            <td>{{ input.multiplyBy2 }}</td>\n            <td>{{ input.square }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<app-add-inputs></app-add-inputs>\n<router-outlet></router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}