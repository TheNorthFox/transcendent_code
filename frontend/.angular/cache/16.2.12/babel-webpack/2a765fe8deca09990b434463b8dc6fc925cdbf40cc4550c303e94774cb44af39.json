{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/value.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./add-inputs/add-inputs.component\";\nfunction AppComponent_div_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.id);\n  }\n}\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Data from API\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_0_li_4_Template, 2, 1, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.inputValue);\n  }\n}\nexport class AppComponent {\n  //responseData: any[];\n  constructor(valueService) {\n    this.valueService = valueService;\n    // title = 'projectView';\n    this.inputValue = [];\n  }\n  ngOnInit() {\n    this.valueService.getAllData().subscribe(data => {\n      this.inputValue = data;\n    });\n  }\n  // multipliedSquare(): void{\n  //   this.valueService.addInputs(this.inputs).subscribe(data => {\n  //     console.log(data);\n  //     this.inputs = new InputValue();\n  //   });\n  // }\n  // onClick() {\n  //   this.multipliedSquare();\n  //   }\n  // getMultipliedBy2(value:any) {\n  //   return value * 2;\n  // }\n  // getSquaredValue(value:any) {\n  //   return Math.pow(value * 2, 2);\n  // }\n  onSubmit(formData) {\n    this.valueService.postData(formData).subscribe(response => {\n      this.data = response;\n      this.errorMsg = '';\n    }, error => {\n      this.errorMsg = 'Error: ' + error.message;\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ValueService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵelement(1, \"app-add-inputs\")(2, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.inputValue);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterOutlet, i4.AddInputsComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r2","id","ɵɵtemplate","AppComponent_div_0_li_4_Template","ɵɵproperty","ctx_r0","inputValue","AppComponent","constructor","valueService","ngOnInit","getAllData","subscribe","data","onSubmit","formData","postData","response","errorMsg","error","message","_","ɵɵdirectiveInject","i1","ValueService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","ɵɵelement"],"sources":["/Users/minyahil/projectView/src/app/app.component.ts","/Users/minyahil/projectView/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { InputValue } from 'src/InputValue';\nimport { ValueService } from './services/value.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  // title = 'projectView';\n   inputValue: InputValue[] = [];\n  // inputs: InputValue = new InputValue();\n  data: any;\n  errorMsg: string;\nformData: any;\n//responseData: any[];\n\n  constructor(private valueService: ValueService){}\n  \n  ngOnInit() {\n    this.valueService.getAllData()\n      .subscribe(data => {\n        this.inputValue = data;\n      });\n    }\n  \n \n\n  // multipliedSquare(): void{\n  //   this.valueService.addInputs(this.inputs).subscribe(data => {\n  //     console.log(data);\n  //     this.inputs = new InputValue();\n  //   });\n  // }\n\n  // onClick() {\n  //   this.multipliedSquare();\n  //   }\n\n\n  // getMultipliedBy2(value:any) {\n  //   return value * 2;\n  // }\n\n  // getSquaredValue(value:any) {\n  //   return Math.pow(value * 2, 2);\n  // }\n\n  onSubmit(formData: any) {\n    this.valueService.postData(formData)\n      .subscribe(response => {\n        this.data = response;\n        this.errorMsg = '';\n      }, error => {\n        this.errorMsg = 'Error: ' + error.message;\n      });\n  }\n\n}\n\n","<!-- <div class=\"container\" style=\"padding-top: 40px\">\n  <div class=\"row\">\n    <div class=\"col-9\">\n\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">input</th>\n            <th scope=\"col\">multiply by 2</th>\n            <th scope=\"col\">Square</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let input of inputValue\" >\n            <td>{{inputs.id}}</td>\n            <td>{{inputs.input}}</td>\n            <td>{{inputs.multiplyBy2}}</td>\n            <td>{{inputs.square}}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      \n    </div>\n  </div>\n</div> -->\n<div *ngIf=\"inputValue\">\n  <h2>Data from API</h2>\n  <ul>\n    <li *ngFor=\"let item of inputValue\">{{ item.id }}</li>\n    <!-- Replace 'property' with the actual property you want to display -->\n  </ul>\n</div>\n<app-add-inputs></app-add-inputs>\n<router-outlet></router-outlet>"],"mappings":";;;;;;;IC8BIA,EAAA,CAAAC,cAAA,SAAoC;IAAAD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAlBH,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,EAAA,CAAa;;;;;IAHrDP,EAAA,CAAAC,cAAA,UAAwB;IAClBD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtBH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAQ,UAAA,IAAAC,gCAAA,gBAAsD;IAExDT,EAAA,CAAAG,YAAA,EAAK;;;;IAFkBH,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAU,UAAA,YAAAC,MAAA,CAAAC,UAAA,CAAa;;;ADpBtC,OAAM,MAAOC,YAAY;EAQzB;EAEEC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IARhC;IACC,KAAAH,UAAU,GAAiB,EAAE;EAOkB;EAEhDI,QAAQA,CAAA;IACN,IAAI,CAACD,YAAY,CAACE,UAAU,EAAE,CAC3BC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACP,UAAU,GAAGO,IAAI;IACxB,CAAC,CAAC;EACJ;EAIF;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAGA;EACA;EACA;EAEA;EACA;EACA;EAEAC,QAAQA,CAACC,QAAa;IACpB,IAAI,CAACN,YAAY,CAACO,QAAQ,CAACD,QAAQ,CAAC,CACjCH,SAAS,CAACK,QAAQ,IAAG;MACpB,IAAI,CAACJ,IAAI,GAAGI,QAAQ;MACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;IACpB,CAAC,EAAEC,KAAK,IAAG;MACT,IAAI,CAACD,QAAQ,GAAG,SAAS,GAAGC,KAAK,CAACC,OAAO;IAC3C,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAjDUd,YAAY,EAAAb,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZlB,YAAY;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCiBzBtC,EAAA,CAAAQ,UAAA,IAAAgC,2BAAA,iBAMM;QACNxC,EAAA,CAAAyC,SAAA,qBAAiC;;;QAP3BzC,EAAA,CAAAU,UAAA,SAAA6B,GAAA,CAAA3B,UAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}