{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ValueService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/multiply';\n  }\n  getAllData() {\n    return this.http.get(`${this.baseUrl}/allData`);\n  }\n  addInputBy2(input) {\n    return this.http.post(`${this.baseUrl}/by2`, input);\n  }\n  addInputSquar(input) {\n    return this.http.post(`${this.baseUrl}/square`, input);\n  }\n  multiplyBy2(value) {\n    return this.http.post(`${this.apiUrl}/by2`, value);\n  }\n  multipliedSquare(value) {\n    return this.http.post(`${this.apiUrl}/square`, value);\n  }\n  static #_ = this.ɵfac = function ValueService_Factory(t) {\n    return new (t || ValueService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValueService,\n    factory: ValueService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ValueService","constructor","http","baseUrl","getAllData","get","addInputBy2","input","post","addInputSquar","multiplyBy2","value","apiUrl","multipliedSquare","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/minyahil/projectView/src/app/services/value.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValueService {\n\n  private baseUrl = 'http://localhost:8080/api/multiply'\n\n  constructor(private http: HttpClient) { }\n\n  getAllData(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/allData`)\n }\n\n public addInputBy2(input: object): Observable<object> {\n  return this.http.post(`${this.baseUrl}/by2`, input);\n}\n\npublic addInputSquar(input: object): Observable<object> {\n  return this.http.post(`${this.baseUrl}/square`, input);\n}\n\n\n\nmultiplyBy2(value: InputValue): Observable<InputValue> {\n  return this.http.post<InputValue>(`${this.apiUrl}/by2`, value);\n}\n\nmultipliedSquare(value: InputValue): Observable<InputValue> {\n  return this.http.post<InputValue>(`${this.apiUrl}/square`, value);\n}\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;EAEd;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,UAAU,CAAC;EAClD;EAEOG,WAAWA,CAACC,KAAa;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,MAAM,EAAEI,KAAK,CAAC;EACrD;EAEOE,aAAaA,CAACF,KAAa;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,SAAS,EAAEI,KAAK,CAAC;EACxD;EAIAG,WAAWA,CAACC,KAAiB;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACM,IAAI,CAAa,GAAG,IAAI,CAACI,MAAM,MAAM,EAAED,KAAK,CAAC;EAChE;EAEAE,gBAAgBA,CAACF,KAAiB;IAChC,OAAO,IAAI,CAACT,IAAI,CAACM,IAAI,CAAa,GAAG,IAAI,CAACI,MAAM,SAAS,EAAED,KAAK,CAAC;EACnE;EAAC,QAAAG,CAAA,G;qBA1BYd,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZnB,YAAY;IAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}